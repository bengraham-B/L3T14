Functional Requirements 

(a) The expected users of the Software:
    (1) Professionals 
    (2) Students planning studying 
    (3) People planning their daily activities

(b) The approach (Functions):
    (1) Proving a grid view of the days in each month.
    (2) Allow the user to select a day and begin adding tasks.
    (3) The user will be able to edit and delete tasks.
    (4) A reminder will be sent to the user, they can set the freqeuncy of when they recevie the reminders.
    (5) The user will be able to assign colours to the tasks, depending on their uergency or user`s choice.
    (6) Option to send their schedule as an email to themsevles and other submitted email addresses.


Non-Functional Requirements

(a) Usability:
    The UI will be simple and consist of the 4 basic colours, white background, black text, blue as the secondary
    colour and orange for things which should stand out.
    The website will also contain a online help page, which contains a form for users to submit issues.
    The will also be a documentaion page which explains to the user how to use the website and explains the 
    all the functionality it offers.

(b) Reliability:
    All functions which interact with the server and the client will be placed in a try catch block 
    which will be able to provide users and developers with accurate error messages.

(c) Preformace:
    To ensure that the website offers user optimal preformance, we will ensure that unneccessary files and code to
    reduce the size of the website which will increase the overall speed of the website. JWT will be used and 
    will be set to expire in one month which will allow users to effortlessly login into the website without 
    having togo through the login process each time. We will use the fastest hosting servce to ensure that 
    our users inteacts with our website are quickly hanldled, further increasing the websites preformance [1].

(d) Secruity:
    To ensure that users can login and signup safely, JWT will be used and bcrypt to hash users password with a 
    secret word of a minimum length of 12 characters containg numbers, capital and lowercase letters as well 
    as symbols and numbers. Helmet.js will be used add secruity from threats such as cross-site scripting and
    click jacking attacks [2].


Recsources Used:
[1] https://webflow.com/blog/how-to-boost-your-sites-performance?utm_source=google&utm_medium=search&utm_campaign=Google-Search-Dynamic-Search-Ads-Core-BBSS&utm_term=aud-520743546121:dsa-45211625058___491754501325___ss_paid-bb&gclid=CjwKCAjwgqejBhBAEiwAuWHioMIRFvXbdZNvvRUL63qCtJYv3luGuW5Bi_LGat5FQ4Cg1fo2f8yWyRoCTKAQAvD_BwE

[2] https://blog.logrocket.com/using-helmet-node-js-secure-application/#:~:text=js!-,What%20is%20Helmet%3F,comply%20with%20web%20security%20standards
